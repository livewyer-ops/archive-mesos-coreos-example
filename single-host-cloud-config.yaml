#cloud-config

coreos:
  units:
    - name: zookeeper.service
      command: start
      content: |
        [Unit]
        Description=Zookeeper
        After=docker.service
        Requires=docker.service
        [Service]
        Restart=on-failure
        RestartSec=20
        TimeoutStartSec=0
        EnvironmentFile=/etc/environment
        ExecStartPre=-/usr/bin/docker kill zookeeper
        ExecStartPre=-/usr/bin/docker rm zookeeper
        ExecStartPre=/usr/bin/docker pull jplock/zookeeper
        ExecStart=/usr/bin/docker run --net=host --name=zookeeper jplock/zookeeper
        ExecStop=/usr/bin/docker stop zookeeper
    - name: mesos-master.service
      command: start
      content: |
        [Unit]
        Description=MesosMaster
        After=docker.service
        Requires=docker.service
        [Service]
        Restart=on-failure
        RestartSec=20
        TimeoutStartSec=0
        ExecStartPre=-/usr/bin/docker kill mesos_master
        ExecStartPre=-/usr/bin/docker rm mesos_master
        ExecStartPre=/usr/bin/docker pull mesosphere/mesos-master:0.20.1
        ExecStart=/usr/bin/sh -c "/usr/bin/docker run \
            --name=mesos_master \
            --privileged \
            --net=host \
            mesosphere/mesos-master:0.20.1 \
            --ip=$(/usr/bin/ip -o -4 addr list eth0 | grep global | awk \'{print $4}\' | cut -d/ -f1) \
            --zk=zk://$(/usr/bin/ip -o -4 addr list eth0 | grep global | awk \'{print $4}\' | cut -d/ -f1):2181/mesos \
            --work_dir=/var/lib/mesos/master \
            --quorum=1"
        ExecStop=/usr/bin/docker stop mesos_master
    - name: mesos-slave.service
      command: start
      content: |
        [Unit]
        Description=MesosSlave
        After=docker.service
        Requires=docker.service
        [Service]
        Restart=on-failure
        RestartSec=20
        TimeoutStartSec=0
        ExecStartPre=-/usr/bin/docker kill mesos_slave
        ExecStartPre=-/usr/bin/docker rm mesos_slave
        ExecStartPre=/usr/bin/docker pull mesosphere/mesos-slave:0.20.1
        ExecStart=/usr/bin/sh -c "/usr/bin/docker run \
            --name=mesos_slave \
            --net=host \
            --privileged \
            -v /sys:/sys \
            -v /usr/bin/docker:/usr/bin/docker:ro \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v /lib64/libdevmapper.so.1.02:/lib/libdevmapper.so.1.02:ro \
            mesosphere/mesos-slave:0.20.1 \
            --ip=$(/usr/bin/ip -o -4 addr list eth0 | grep global | awk \'{print $4}\' | cut -d/ -f1) \
            --containerizers=docker \
            --master=zk://$(/usr/bin/ip -o -4 addr list eth0 | grep global | awk \'{print $4}\' | cut -d/ -f1):2181/mesos \
            --work_dir=/var/lib/mesos/slave \
            --log_dir=/var/log/mesos/slave"
        ExecStop=/usr/bin/docker stop mesos_slave
    - name: marathon.service
      command: start
      content: |
        [Unit]
        Description=Marathon
        After=docker.service
        Requires=docker.service
        [Service]
        Restart=on-failure
        RestartSec=20
        TimeoutStartSec=0
        ExecStartPre=-/usr/bin/docker kill marathon
        ExecStartPre=-/usr/bin/docker rm marathon
        ExecStartPre=/usr/bin/docker pull mesosphere/marathon:v0.7.5
        ExecStart=/usr/bin/sh -c "/usr/bin/docker run \
            --name marathon \
            -e LIBPROCESS_PORT=9090 \
            -p 8080:8080 \
            -p 9090:9090 \
            mesosphere/marathon:v0.7.5 \
            --master zk://$(/usr/bin/ip -o -4 addr list eth0 | grep global | awk \'{print $4}\' | cut -d/ -f1):2181/mesos \
            --zk zk://$(/usr/bin/ip -o -4 addr list eth0 | grep global | awk \'{print $4}\' | cut -d/ -f1):2181/marathon \
            --checkpoint \
            --task_launch_timeout 300000"
        ExecStop=/usr/bin/docker stop marathon

